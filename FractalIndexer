class FractalIndexer:
    def __init__(self):
        self.indexes = {}

    def add_index(self, index_name):
        self.indexes[index_name] = {}

    def remove_index(self, index_name):
        if index_name in self.indexes:
            del self.indexes[index_name]

    def index_fractal(self, index_name, token_fractal):
        if index_name in self.indexes:
            properties = self._extract_properties(token_fractal)
            for prop, value in properties.items():
                if value not in self.indexes[index_name]:
                    self.indexes[index_name][value] = []
                self.indexes[index_name][value].append(token_fractal)

    def search_index(self, index_name, property_name, value):
        if index_name in self.indexes and value in self.indexes[index_name]:
            return self.indexes[index_name][value]
        return []

    def _extract_properties(self, token_fractal):
        # Extract relevant properties from the token fractal
        properties = {}
        # Add code here to extract properties from the token fractal
        return properties
